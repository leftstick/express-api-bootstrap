(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{236:function(t,e,s){"use strict";s.r(e);var r=s(3),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"目录及约定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录及约定"}},[t._v("#")]),t._v(" 目录及约定")]),t._v(" "),s("p",[t._v("固定目录结构如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── dist/                           // 固定输出目录，不可修改\n└── src/                            // 源码目录，不可修改\n    ├── controllers/                // 在这个目录下的所有 .ts 文件会被当做Controller自动扫描进入容器\n        └── helloController.ts\n├── test/                           // 在这个目录下的所有 .test.ts 文件会被当做测试用例执行\n    └── hello.test.ts\n├── .bootrc.ts                      // 配置文件，可选\n└── package.json\n")])])]),s("h2",{attrs:{id:"typescript-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-语法"}},[t._v("#")]),t._v(" Typescript 语法")]),t._v(" "),s("p",[t._v("配置文件，源码都会在运行时由 "),s("code",[t._v("@babel/register")]),t._v(" 加载转换，所以您可以敞开了写 "),s("code",[t._v("typescript")]),t._v(" 或者 "),s("code",[t._v("ES6")])])])}),[],!1,null,null,null);e.default=a.exports}}]);