(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{222:function(t,e,r){"use strict";r.r(e);var a=r(3),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"directory-and-convention"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#directory-and-convention"}},[t._v("#")]),t._v(" Directory and Convention")]),t._v(" "),r("p",[t._v("The directory structure of an application is as follows:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(".\n├── dist/                           // build output directory\n└── src/                            // source directory, mandatory\n    ├── controllers/                // .ts files in this directory will be scanned as API controller automatically\n        └── helloController.ts\n├── test/                           // .test.ts files in this directory will be scanned as unit test cases\n    └── hello.test.ts\n├── .bootrc.ts                      // configuration file, optional\n└── package.json\n")])])]),r("h2",{attrs:{id:"typescript-grammar"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript-grammar"}},[t._v("#")]),t._v(" Typescript Grammar")]),t._v(" "),r("p",[t._v("Configuration files, source code are registered in real time via "),r("code",[t._v("@babel/register")]),t._v(", which means ES6, typescript grammar is available for you.")])])}),[],!1,null,null,null);e.default=s.exports}}]);